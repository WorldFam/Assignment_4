@page "/login"
@using LoginExample.Authentication


@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager

<AuthorizeView>
    <NotAuthorized>
        <div class="container1">
            <div class="row">
                <div class="col">
                    <div class="hide-md-lg">
                        <p>Login</p>
                    </div>
                    <input class="input" type="text" name="username" placeholder="Username" required  @bind-value="username">
                    <input class="input" type="password" name="password" placeholder="Password" required @bind-value="password">
                    <div style="color:red">@errorMessage</div>
                <input class="yes" type="submit" @onclick="PerformLogin"  @onkeyup="DoTheThing" value="Login">
              </div>
            </div>
        </div>
    </NotAuthorized>
</AuthorizeView>

@code {
    private string username;
    private string password;
    private string errorMessage;

    public async Task PerformLogin() {
        
        errorMessage = "";
        try {
            await ((CustomAuthenticationStateProvider) AuthenticationStateProvider).ValidateLogin(username, password);
            username = "";
            password = "";
            NavigationManager.NavigateTo("/AdultList");
        } catch (Exception e) {
            errorMessage = e.Message;
        }
    }
    private void DoTheThing( KeyboardEventArgs eventArgs)
    {
        if (eventArgs.Key == "Enter" )
        {
            PerformLogin();
        }        
    }
}

