
@using LoginExample.Authentication

@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager
<div class="top-row pl-4 navbar navbar-dark">
    <AuthorizeView>
        <NotAuthorized>
        <a class="navbar-brand" href="">Welcome</a>
        </NotAuthorized>
    </AuthorizeView>
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <ul class="nav flex-column">
        <AuthorizeView>
            <NotAuthorized>
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                    <span class="oi oi-person" aria-hidden="true"></span> Login
                </NavLink>
            </li>
            </NotAuthorized>
        </AuthorizeView>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="AdultList">
                <span class="oi oi-list" aria-hidden="true"></span> Adult List
            </NavLink>
        </li>
        <AuthorizeView Policy="SecurityLevel2">
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="AddAdult">
                    <span class="oi oi-plus" aria-hidden="true"></span> Add Adult
                </NavLink>
            </li>
            <li class="nav-item px-3">
                <NavLink class="nav-link" @onclick="PerformLogout">
                    <span class="oi oi-account-logout" aria-hidden="true"></span> Log-Out
                </NavLink>
            </li>
        </AuthorizeView>
    </ul>
</div>

@code {
    private bool collapseNavMenu = true;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
    
    private string username;
    private string password;
    private string errorMessage;
    
    public async void PerformLogout() {
        errorMessage = "";
        username = "";
        password = "";
        try {
            await ((CustomAuthenticationStateProvider) AuthenticationStateProvider).Logout();
            NavigationManager.NavigateTo("/");
        } catch (Exception e) { }
    }

}