
@using global::Models
@using Assignment_2.Data
@using System.Runtime.CompilerServices

@inject ICloudService FileContext
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider

@page "/EditAdult/{value}"
<EditForm Model="@_adultItem" OnValidSubmit="@EditAdultAsync">
    <DataAnnotationsValidator/>
    <ValidationSummary/>
    <div> &nbsp;</div>
    <div class="container">
        <div class="row ">
            <div class="col-1"><p class="my-1 mx-1 size">First Name:</p></div>
            <div class="col-5"> <InputText type="text" class="form-control" @bind-Value="_adultItem.FirstName"/></div>
            <div class="col-1"><p class="my-1 mx-1 size">Last Name:</p></div>
            <div class="col-5" > <InputText type="text" class="form-control" @bind-Value="_adultItem.LastName"/></div>
        </div>
        <div> &nbsp;</div>
        <div class="row">
            <div class="col">
                <InputSelect  @bind-Value="_adultItem.HairColor" class="form-control">
                    <option disabled selected>Select Available Hair Color</option>
                    <option id="blond" value="Blond">Blond</option>
                    <option id="red" value="Red">Red</option>
                    <option class="brown" value="Brown">Brown</option>
                    <option id="black" value="Black">Black</option>
                    <option id="white" value="White">White</option>
                    <option class="grey" value="Grey">Grey</option>
                    <option class="blue" value="Blue">Blue</option>
                    <option class="green" value="Green">Green</option>
                    <option id="leverpostej" value="Leverpostej">Leverpostej</option>
                </InputSelect>   
            </div>
            <div class="col">
                <InputSelect @bind-Value="_adultItem.EyeColor"  class="form-control" >
                    <option disabled selected>Select Available Eye Color</option>
                    <option class="brown" value="Brown">Brown</option>
                    <option id="amber" value="Aamber">Amber</option>
                    <option id="hazel" value="Hazel">Hazel</option>
                    <option class="grey" value="Grey">Grey</option>
                    <option class="blue" value="Blue">Blue</option>
                    <option class="green" value="Green">Green</option>
                </InputSelect>       
            </div>
        </div>
        <div> &nbsp;</div>
        <div class="row">
            <div class="col-1">
                <label class="my-1 mx-4">Age:</label>
            </div>
            <div class="col-5">
                <InputNumber @bind-Value="_adultItem.Age" class="form-control"/>
            </div>
            <div class="col-1">
                <label class="my-1 mr-2">Weight:</label>
            </div>
            <div class="col-5">
                <InputNumber rows="1" @bind-Value="_adultItem.Weight" class="form-control"/>
            </div>
        </div>
        <div> </div>
        <div class="row">
            <div class="col-1"><label class="my-1 mx-4">Height:</label></div>
            <div class="col-5"><InputNumber @bind-Value="_adultItem.Height" class="form-control"/></div>
            <div class="col-2"><label>Select gender:</label></div>
            @foreach (var item in new string[] { "Male","Female"})
                        {
                            <div class="form-check col-2">
                                <input type="radio" name="technology" id="@item" value="@item" @onchange="RadioSelection" checked=@(RadioValue.Equals(item, StringComparison.OrdinalIgnoreCase))/>
                                <label for="@item">@item</label>
                            </div>
                        }
        </div>
        <div>
            <div> &nbsp;</div>
            <div class="row">
                <div class="col-1"><label>Job Title:</label></div>
                <div class="col-8"><InputText  @bind-Value="_adultItem.JobTitle" class="form-control"/> </div>
                <div class ="col-3">
                    <button  class="btn btn-primary mb-2 button1" @onclick="OnSubmit" type="submit">Change</button>
                </div>
            </div>
        </div>
    </div>
</EditForm>
@code {
    private Adult _adultItem = new Adult();
    

    protected override async Task OnParametersSetAsync()
    {
        var stringId = value;
        int Id = int.Parse(stringId);
        _adultItem = await FileContext.GetAdultByIdAsync(Id);
    }
    
    private async Task EditAdultAsync()
    {
        await FileContext.UpdateAdultAsync(_adultItem);
        NavigationManager.NavigateTo("/AdultList");
    }
    
    [Parameter]
     public  string value { get; set; }
    
    string RadioValue = "" ;
    void RadioSelection(ChangeEventArgs args)
    {
        RadioValue = args.Value.ToString();
        if (RadioValue.Equals("Female"))
        {
            RadioValue = "F";
        }
        else if (RadioValue.Equals("Male"))
        {
            RadioValue = "M";
        }
    }

    void OnSubmit()
    {
        _adultItem.Sex = RadioValue;
    }
    
}